= pagify 0.5
by Lin Jen-Shin (a.k.a. godfat-真常[http://godfat.org])
  godfat (XD) godfat.org

== LINKS:

* github-project[http://github.com/godfat/pagify]
* rubyforge-project[http://rubyforge.org/projects/ludy]

== DESCRIPTION:

 pagination tools for plain Ruby, DataMapper, ActiveRecord, and other ORM.

== FEATURES:

* aims to be as flexible as possible
* separate intrusive "pagify" method and Array/DataMapper/ActiveRecord Pager.
* separate view helpers. there's html helper, yaml helper(planed), xml/rss/atom helper(planed).

== SYNOPSIS:

 the easiest way to use:

 require 'pagify/data_mapper'
 require 'pagify/helpers/html'

 class User
   include DataMapper::Resource
   property :id, Serial
   property :name, String
   has n, :pets
 end

 class Pet
   include DataMapper::Resource
   property :id, Serial
   property :name, String
   belongs_to :user
 end

 User.pagify page => 1, :per_page => 10 # => create a page contains users
 User.all(:name => 'godfat').pagify     # => create a page contains users named godfat

 User.get(1).pets.pagify                # => create a page contains pets owned by user 1
 # NOTE: this would create a whole new pager if you never set pagify_cache = true,
 # NOTE: and if you set pagify_cache = true, be careful of THREAD-SAFETY problem!!

 Pet.pagify.pager.html.links{ |page| # => create a string with page links
   # the block result would be used as url for each page
   "/pets/show?page=#{page}"
 }

 Pagify::Helpers::HTML.setting[:prev_text] = '<]' # globally change html setting
 # NOTE: because pagify would create a new pager, instance level setting would fail!
 # NOTE: if you would like to use instance level setting, you shouldn't use method pagify,
 # NOTE: or use pagify_cache = true and face thread-safety problem.

 pet_pager = Pagify::DataMapperPager.new Pet # create pager by hand
 pet_pager.page(5) # return page 5 which contains pets in page 5.

 pet_pager.html.setting[:next_text] = '[>' # change html setting for this pager.
 # NOTE: if you call setting.delete(:next_text) or call setting.restore_default!
 # NOTE: the pager would use class level (global) html setting, mentioned above.

 pet_pager.page(1).html.links_navigate{ |page| # => this would create next/prev links only.
   "/pets/show?page=#{page}"
 }

 # => this would create next/prev links and other page links
 pet_pager.page(1).html.links_full{ |page|
   "/pets/show?page=#{page}"
  }

 see unit test for full example.

== REQUIREMENTS:

* for Basic/Array  Pager: only ruby is needed
* for DataMapper   Pager: dm-core and dm-aggregates 0.9.6 and above
* for ActiveRecord Pager: activerecord 2.1.1 and above

== INSTALL:

* sudo gem install pagify

== LICENSE:

Apache License 2.0

Copyright (c) 2008, Lin Jen-Shin (a.k.a. godfat 真常)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
